import ddf.minim.spi.*;
import ddf.minim.signals.*;
import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.ugens.*;
import ddf.minim.effects.*;

Minim minim;
AudioPlayer danub;

ArrayList<aster> asteroids;
PImage imgbackground;
PImage imgcohete;
PImage imgasteroid;
int Yship;
int score;
int counter;
int NUM_ASTEROIDES = 20;
int astersize = 20;
int Xship=275;
PImage imgbilly;
int instru;


void setup(){
size (600,600);
  imgbackground = loadImage("background.png");
  imgcohete = loadImage ("cohete.png");
  imgasteroid = loadImage ("asteroid.png");
asteroids = new ArrayList<aster>();
 
  int bla = 0;
  while (bla < NUM_ASTEROIDES) {
    asteroids.add(random12());
    bla += 1;
  }   
 minim = new Minim (this);
 danub = minim.loadFile("danub.mp3");
 danub.play();

}
void draw(){
background(imgbackground);
image(imgcohete,Xship,Yship-58, 40, 58);
counter=counter+1;
textSize(32);
text((score),90,40);
fill(255);
text((counter/60),560,40);
fill(255);
text("level", 10, 40); 
fill(255);
text("time", 530, 80); 
fill(255);
if(instru==1){
textSize(20);
text("Press 'R' to restart, UP and DOWN to move the rocket",20,100);
}
if(instru==2){
instru=0;
}
if(Yship==0){
score=score+1;
Yship=600;
  if(score==1){
    NUM_ASTEROIDES = 20;
    setup();
  }
  if(score==2){
    NUM_ASTEROIDES = 25;
    setup();
  }
    if(score==3){
    NUM_ASTEROIDES = 30;
    setup();
  }
      if(score==4){
    NUM_ASTEROIDES = 35;
    setup();
  }
        if(score==5){
    NUM_ASTEROIDES = 40;
    setup();
  }
}
     if(score>=6 && score<1000){
       score=6;
       counter=5;
       background(0);
       NUM_ASTEROIDES = 0;
    setup();
    textSize(32);
text("You win",90,40);
fill(255);
           }

if(counter>=3600){
       score=1111111;
       counter=50000;
       background(0);
       NUM_ASTEROIDES = 0;
    setup();
    textSize(32);
    textAlign(CENTER);
text("Game over, press 'R' to restart",300,300);
fill(255);
danub.close();
}

 for (aster b : asteroids) {
    b.bola();
    b.position();
    if (b.x < Xship+35 && b.x > Xship-15 && 
b.y-60 < Yship-60 && b.y > Yship-70) {
Yship=600;//derecha, izquierda, abajo, arriba
}
  }

}
 
aster random12() {
  return new aster(random(5, width), random(0, 520),   valueAroundZero(), 0, random(25, 76), 
  color (255));
}
 
float valueAroundZero() {
  
  float buffer = random(1.0, 2.0);
  if (random(100) < 50) 
    buffer = buffer * -1; 
 
  return buffer;
}
 

 
class aster {
  float x, y; 
  float dx, dy;
  float diameter = 10;
  color c = 255;
 
  aster(float abc_x, float abc_y, 
  float abc_dx, float abc_dy, 
  float diameter, color abc_c) {
    x = abc_x;
    y = abc_y;
    dx = abc_dx;
    c = abc_c;
    y = abc_y;
    dy = abc_dy;
  }
 
  void bola() {
    image(imgasteroid,x,y,astersize,astersize);
  }

 
  void position() { 
    x += dx;
    y += dy;
    if (x > width+20) {
      dx= -1 * abs(dx);
    }
    else if (x < -20) {
      dx= abs(dx);
    }
  }
}
void keyPressed() {
    if (keyCode == UP) {
      Yship=Yship-8;
    }
    if (keyCode == DOWN) {
      Yship=Yship+8;
    }
        if (key=='r') {
      counter=0;
      score=1;
      Yship=600;
      NUM_ASTEROIDES = 20;
      textAlign(LEFT);
       danub.play();
            setup();
    }
    if (keyCode == ENTER ){
      instru=instru+1;
  }
}
